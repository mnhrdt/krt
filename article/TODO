CODE

C8. add old kernels to the new kernel system
C4. add a simple test (apart from the article compilation?)
C5. fix interface help text
C6. implementation by 3d convolution
C7. implement otsu thresholding for post-processing of the krt


ARTICLE

A0. find a better name for "gap" -> comparison function
A2. maybe try other effects (chubb illusion, cornsweet illusion, ...)
A3. run mach bands with noise
A3'. run mach bands with smooth steps
A3''. observation: contrast-invariance implies non-continuity
A5. an experiment with color (separable)
A6. compare with retinex
A7. use the method as a binariaztion criterion (and compare with otsu)
A8. [maybe] quantitative expriments comparing it to other normalization
   preprocessing methods for block matching
A9. draw a figure showing the effect of the convolution (2d or 3d)
A10. put references as bibtex
A11. re-do the histogram uniformization experiments and see if they improve
A12. IMPORTANT ISSUE: the "plain" krt (with heaviside H) is by construction
contrast-invariant.  However, adding a "gap" parameter to H, or using a
sigmoid, renders it non-contrast invariant.  This must be discussed in the
article, probably with an example.  This has neural ramifications because the
heaviside is not, so to say, trainable, but the sigmoids are.
A13. prove that the limit when the size of the kernel is zero is the curvature


"contrast-invariance is a non-differentiable property"

DONE

A1. put new experiments with adelson checkerboard
A4. prepare a complete set of experiments (via script) for a "technical report"
C1. add smooth heaviside, and command line option
C2. normalize parameters for smooth heaviside
C3. heaviside parameter should be optional, by default it should be
discontinuous Heaviside
